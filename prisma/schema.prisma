generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cerco_Seguro {
  ID_Cerco            Int                   @id @default(autoincrement())
  P_Latitud           Decimal               @db.Decimal
  P_Longitud          Decimal               @db.Decimal
  S_Latitud           Decimal               @db.Decimal
  S_Longitud          Decimal               @db.Decimal
  T_Latitud           Decimal               @db.Decimal
  T_Longitud          Decimal               @db.Decimal
  C_Latitud           Decimal               @db.Decimal
  C_Longitud          Decimal               @db.Decimal
  Usuario_Supervisado Usuario_Supervisado[]
}

model Cuenta {
  ID_US            Int                @id @default(autoincrement())
  Tipo             String             @db.VarChar
  Name             String             @db.VarChar
  Address          String             @db.VarChar
  Email            String             @unique @db.VarChar
  User             String             @unique @db.VarChar
  tel              String             @unique @db.VarChar
  pass             String             @db.VarChar
  ID_Tipo          Int
  Tipo_Usuario     Tipo_Usuario       @relation(fields: [ID_Tipo], references: [ID_Tipo], onDelete: NoAction, onUpdate: NoAction)
  US_USS_Weareable US_USS_Weareable[]
}

model Tipo_Usuario {
  ID_Tipo Int      @id @default(autoincrement())
  Tipo    String   @db.VarChar
  Cuenta  Cuenta[]
}

model US_USS_Weareable {
  ID_US_USS_Weareable Int                 @id @default(autoincrement())
  ID_US               Int
  ID_Wearable         String              @db.VarChar
  ID_USS              Int
  Usuario_Supervisado Usuario_Supervisado @relation(fields: [ID_USS], references: [ID_USS], onDelete: NoAction, onUpdate: NoAction)
  Usuario             Cuenta              @relation(fields: [ID_US], references: [ID_US], onDelete: NoAction, onUpdate: NoAction)
  Wearable            Wearable            @relation(fields: [ID_Wearable], references: [ID_Wearable], onDelete: NoAction, onUpdate: NoAction)
}

model Ubicacion {
  ID_Ubicacion Int      @id @default(autoincrement())
  Latitud      Decimal  @db.Decimal
  Longitud     Decimal  @db.Decimal
  ID_Wearable  String   @db.VarChar
  Wearable     Wearable @relation(fields: [ID_Wearable], references: [ID_Wearable], onDelete: NoAction, onUpdate: NoAction)
}

model Usuario_Supervisado {
  ID_USS           Int                @id @default(autoincrement())
  USS_name         String             @db.VarChar
  Address          String             @db.VarChar
  Tel_USS          String             @db.VarChar
  NSS              String             @db.VarChar
  ID_Cerco         Int
  US_USS_Weareable US_USS_Weareable[]
  Cerco_Seguro     Cerco_Seguro       @relation(fields: [ID_Cerco], references: [ID_Cerco], onDelete: NoAction, onUpdate: NoAction)
}

model Wearable {
  ID_Wearable      String             @id @db.VarChar
  Registro_ID      Int
  US_USS_Weareable US_USS_Weareable[]
  Ubicacion        Ubicacion[]
}
